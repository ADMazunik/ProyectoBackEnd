paths:
  /api/products/:
    get:
      summary: Devuelve todos los productos
      tags:
        - Products
      responses:
        "200":
          description: Devuelve correctamente los productos
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    type: array
                    description: Todos los productos
                    example: [{ title: "Producto 1" }, { title: "Producto 2" }, { title: "Producto 3" }]
                  info:
                    type: object
                    description: información de la paginación de los productos
                    example:
                      {
                        status: "success",
                        count: 10,
                        totalPages: 1,
                        prevPage: null,
                        nextPage: 2,
                        page: 1,
                        hasPrevPage: false,
                        hasNextPage: true,
                        prevLink: null,
                        nextLink: "http://localhost:8080/products?page=2",
                      }
        "500":
          description: Error del servidor, por ejemplo por un fallo de conexión
          content:
            application/json:
              schema:
                $ref: "#components/schemas/RequestServerError"
    post:
      tags:
        - Products
      summary: Ingresa un nuevo producto en la base de datos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createProduct"
      responses:
        "201":
          description: Devuelve el nuevo producto creado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/RequestOk"
        "500":
          description: Error del servidor, por ejemplo por un fallo de conexión
          content:
            application/json:
              schema:
                $ref: "#components/schemas/RequestServerError"

  /api/products/{id}:
    get:
      tags:
        - Products
      summary: Devuelve un producto a partir del ID provisto por parámetros
      parameters:
        - in: path
          name: id
          required: true
          description: Id del producto a buscar
          schema:
            type: string
      responses:
        "201":
          description: Devuelve correctamente el producto con el ID provisto
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Código de estado de la respuesta
                    example: 201
                  message:
                    type: string
                    description: "Mensaje del estado de la respuesta"
                    example: "Success"
                  data:
                    $ref: "#components/schemas/Products"
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: no se encontró el producto con el ID provisto
                example:
                  msg: Product Not Found
        "500":
          description: Error del servidor, por ejemplo por un fallo de conexión
          content:
            application/json:
              schema:
                $ref: "#components/schemas/RequestServerError"

    put:
      summary: Actuliza los datos del producto con el ID provisto por parámetros
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto que se desea actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateProduct"
      responses:
        "201":
          description: Devuelve correctamente el producto con sus nuevos datos
          content:
            application/json:
              schema:
                $ref: "#components/schemas/RequestOk"
        "500":
          description: Error del servidor, por ejemplo por un fallo de conexión
          content:
            application/json:
              schema:
                $ref: "#components/schemas/RequestServerError"
    delete:
      summary: Elimina el producto correspondiente a la ID provista
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto que se desea eliminar de la base de datos
          schema:
            type: string
      responses:
        "201":
          description: Devuelve correctamente los datos del producto que fue eliminado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/RequestOk"
        "400":
          description: El producto no pudo ser eliminado de la base de datos
          content:
            application/json:
              schema:
                $ref: "#components/schemas/BadRequest"
        "500":
          description: Error del servidor, por ejemplo por un fallo de conexión
          content:
            application/json:
              schema:
                $ref: "#components/schemas/RequestServerError"

components:
  schemas:
    Products:
      type: object
      required:
        - title
        - code
        - description
        - price
        - stock
        - thumbnail
      properties:
        _id:
          type: ObjectId
          description: Identificador único del producto
        title:
          type: string
          description: Nombre del producto
        code:
          type: number
          description: Código correspondiente al producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        stock:
          type: number
          description: Cantidad disponible del producto
        thumbnail:
          type: array
          description: URLs de las imágenes del producto
        status:
          type: boolean
          description: Estado de disponibilidad del producto
        owner:
          type: string
          description: Nombre del dueño del producto
      example:
        _id: ObjectId("6658d75854e3df7b624aa3aa")
        title: Producto de Prueba 2
        code: 2222
        description: Descripción de producto 2
        price: 2000
        stock: 20
        thumbnail: ["https://picsum.photos/200/200"]
        status: true
        owner: admin
    RequestOk:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Identificador único del producto
        title:
          type: string
          description: Nombre del producto
        code:
          type: number
          description: Código correspondiente al producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        stock:
          type: number
          description: Cantidad disponible del producto
        thumbnail:
          type: array
          description: URLs de las imágenes del producto
        status:
          type: boolean
          description: Estado de disponibilidad del producto
        owner:
          type: string
          description: Nombre del dueño del producto
      example:
        _id: ObjectId("6658d75854e3df7b624aa3ad")
        title: Titulo del producto
        code: 12345
        description: Descripción del producto
        price: 112233
        stock: 1234
        thumbnail: ["https://picsum.photos/200/200"]
        status: true
        owner: swagger@mail.com
    RequestServerError:
      type: object
      properties:
        msg:
          type: string
          description: Error de conexión con el servidor
      example:
        msg: "Invalid Server Error"
    BadRequest:
      type: object
      properties:
        msg:
          type: string
          description: La acción no se llevó a cabo
      example:
        msg: "Invalid Request"
    RequestNotFound:
      type: object
      properties:
        msg:
          type: string
          description: No se encontró el elemento buscado
      example:
        msg: "Not Found"

  requestBodies:
    updateProduct:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Identificador único del producto
        title:
          type: string
          description: Nombre del producto
        code:
          type: number
          description: Código correspondiente al producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        stock:
          type: number
          description: Cantidad disponible del producto
        thumbnail:
          type: array
          description: URLs de las imágenes del producto
        status:
          type: boolean
          description: Estado de disponibilidad del producto
        owner:
          type: string
          description: Nombre del dueño del producto
      example:
        title: Producto Modificado por Swagger
        code: 2222
        description: Modificando Producto a través de Swagger
        price: 2001
        stock: 19
        thumbnail: ["https://picsum.photos/200/200"]
        status: true
        owner: swagger@mail.com
    createProduct:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Identificador único del producto
        title:
          type: string
          description: Nombre del producto
        code:
          type: number
          description: Código correspondiente al producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        stock:
          type: number
          description: Cantidad disponible del producto
        thumbnail:
          type: array
          description: URLs de las imágenes del producto
        status:
          type: boolean
          description: Estado de disponibilidad del producto
        owner:
          type: string
          description: Nombre del dueño del producto
      example:
        title: Nuevo Producto Swagger
        code: 54663
        description: Nuevo Producto creado a través de Swagger
        price: 54663
        stock: 1
        thumbnail: ["https://picsum.photos/200/200"]
        status: true
        owner: swagger@mail.com
